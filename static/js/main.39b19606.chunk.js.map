{"version":3,"sources":["styles/LanguageSelector.module.css","styles/DoubleBorderTitle.module.css","utils/BigNumber.js","utils/fetchAddressInfo.js","utils/addressUtils.js","components/Spinner.js","components/LanguageSelector.js","components/DoubleBorderTitle.js","components/AddressName.js","components/QrcodeImg.js","data/walletApps.js","components/merchant/MerchantReceiveToken.js","utils/fetchUserTokenTransferEvents.js","utils/formatData.js","components/merchant/MerchantOrders.js","components/merchant/MerchantApp.js","components/NoMatchPage.js","serviceWorker.js","index.js","styles/Spinner.module.css"],"names":["module","exports","lang-select","doubleBorder","normalPadding","narrowPadding","doubleBorderTitle","doubleBorderLineSegment1","doubleBorderLineSegment2","doubleBorderLineSegment3","doubleBorderLineSegment4","BigNumber","config","FORMAT","prefix","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","suffix","EXPONENTIAL_AT","sleep","milliseconds","Promise","resolve","setTimeout","fetchAddressInfo","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","addressInfo","wrap","_context","prev","next","axios","get","sent","status","abrupt","data","console","error","stop","this","apply","arguments","isInitialized","addressToInfo","init","Set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","info","undefined","Symbol","iterator","done","value","address","toLowerCase","t0","return","finish","getAddressInfo","lowercase_address","hasOwnProperty","getIsMerchantAddress","Boolean","Number","is_feeless_in","Spinner","react_default","createElement","className","styles","spinner","Component","LanguageSelector","state","selectedLangCode","cookies","Cookies","componentDidMount","_this","initLang","isValidLangCode","langCode","localesData","_callee2","selectedLangCodeInCookies","browserLangCode","_context2","log","navigator","languages","language","userLanguage","substring","setState","setLangCode","handleLangChange","event","target","set","path","props","onChange","defaultProps","DoubleBorderTitle","_this$props","paddingType","children","paddingClass","join","AddressName","addressUtils","img","logo_file_name","src","alt","name_beside_logo","QrcodeImg","qrcodeImgData","updateQrcodeImg","nextProps","QRCode","toDataURL","text","width","margin","iconFolderUrl","walletApps","id","isContractWallet","isDappBrowser","name","iconUrl","paymentGuideMessages","isNumeric","num","isNaN","currencySet","PAYMENT_STEPS","freeze","select_wallet_app","scan_qrcode","check_tx","FIRST_PAYMENT_STEP","MerchantReceiveToken","baseUrl","isSelfAmountDesignated","isShowingPaymentProcedureModal","isShowingPayWithDappBrowserModal","isShowingPayWithAnyWalletModal","isTesting","selfAmount","selfAmountInputValue","isValidSelfAmountInputValue","ntdAmount","ntdAmountInputValue","isValidNtdAmountInputValue","selectedCurrency","isShowingMoreInfoForPayingWithDappBrowser","selectedWalletApp","paymentStep","isShowingAllWalletApps","loadSelectedCurrencyFromCookies","location","qs","parse","search","ignoreQueryPrefix","testing","window","origin","handleInputChange","type","checked","defineProperty","has","saveSelectedCurrencyToCookies","_callee3","_context3","handleSelfAmountSubmit","preventDefault","showPayWithDappBrowserModal","handleSelfAmountInputChange","toString","handleNtdAmountInputChange","Math","round","selectEventTarget","select","showPaymentProcedureModal","showPayWithAnyWalletModal","closeModals","handleSelectedCurrencyChange","then","toggleShowingMoreInfoForPayingWithDappBrowser","selectWalletApp","app","toPreviousPaymentStep","showAllWalletApps","_this2","strings","msg_no_account","_this$state","closeModalButton","onClick","aria-hidden","toPreviousPaymentStepButton","walletAppSelector","map","key","slice","concat","walletAppPaymentGuide","displayedSelfAmount","qrcodeContent","qrcodeMsg","browserId","computeReceivePaymentUrl","full_name","msg","splitMsg","split","length","components_QrcodeImg","modalContent","Fragment","Modal","size","show","onHide","centered","Body","Form","Control","as","NTD","EN_SELF","unlimited_payment_amount","onSubmit","noValidate","onInput","onFocus","Receive_Payment","fetchUserTokenTransferEvents","contractAddress","userAddress","ascending","url","_args","result","warning","_x","_x2","formatTransactionIcon","txHash","title","href","rel","formatAddress","substr","formatTimestamp","timestamp","timestampNum","parseInt","toNumber","moment","format","formatWeiToEther","wei","decimalPlaces","etherBN","div","toFixed","toFormat","formatOrder","order","timeStamp","floor","Date","hash_time","hash","from","transfer_from","wallet","to","params","_to","_value","index","_id","indexIsOrderId","formatTransferEvent","formatOrderIndex","formatStatus","statusStr","formatOrderRowClass","getMonthIdOfOrder","groupOrdersByMonth","orders","ordersByMonth","monthId","push","err","forEach","monthlyData","totalValue","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","plus","refundTransferEvent","minus","MerchantOrders","selfTokenContractAddress","selfPayServerUrl","txHashToTransferEvent","completedIncomingTransfers","completedTxHashes","incomingOrders","incomingOrderTxHashes","displayedOrders","displayedOrdersByMonth","abnormalTxDocs","testTxDocs","txHashToTestTxDoc","refundTxDocs","paymentTxHashToRefundTxDoc","pollIntervalIds","isOrdersReceived","lastUpdatedTimeStamp","now","nowTimeStamp","componentWillUnmount","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","intervalId","clearInterval","fetchAbnormalTxDocs","fetchCompletedIncomingTransfers","io","on","processOrders","getOrders","setInterval","abnormal_txs","tx_test","_iterator4","_iteratorNormalCompletion4","_step4","testTxDoc","tx_hash","tx_refund","_iterator5","_iteratorNormalCompletion5","_step5","refundTxDoc","payment_tx_hash","retryAfterMs","_this3","merchantAddress","merchantSelfTokenTransferEvents","Array","isArray","warn","_this4","newCompletedIncomingTransfers","filter","newCompletedOutgoingTransfers","completedOutgoingTransfers","mergeOrders","tx","fromTimeStamp","isGroupedByMonth","formattedIncomingOrders","formattedCompletedIncomingTransfersNotOrders","refundTxHash","refund_tx_hash","sort","o1","o2","_this$state2","updatedSecondsAgo","max","withIcon","formatTransaction","formatRefundInfo","style","maxHeight","overflow","paddingBottom","accounts","LocalizedStrings","pages","receive_payment","dashboard","MerchantApp","web3","selfTokenContract","isMerchantAddress","isShowingBalances","accountState","selfBalanceBN","isAllDataFetched","pollIntervalId","showingPage","provider","match","Web3","providers","HttpProvider","SelfTokenJSON","networks","eth","Contract","abi","poll","fetchAccountState","selfBalanceStr","methods","balanceOf","call","setLanguage","toggleBalances","setPage","page","content","components_DoubleBorderTitle","Store","components_AddressName","Receive_SELF","merchant_MerchantReceiveToken","Today_s_Transactions","merchant_MerchantOrders","All_Transactions","Invalid_Merchant_Address","Spinner_Spinner","navbar","Dashboard","How_to_Use","components_LanguageSelector","NoMatchPage","replace","hostname","startsWith","logger","document","cssText","body","appendChild","_len","messages","_key","_i","message","innerHTML","JSON","stringify","ReactDOM","render","HashRouter","Switch","Route","exact","component","getElementById","serviceWorker","ready","registration","unregister","spinner-cover-container","spinner-cover-background"],"mappings":"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","file":"static/js/main.39b19606.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lang-select\":\"LanguageSelector_lang-select__4FR-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleBorder\":\"DoubleBorderTitle_doubleBorder__1x_9g\",\"normalPadding\":\"DoubleBorderTitle_normalPadding__1-aoQ\",\"narrowPadding\":\"DoubleBorderTitle_narrowPadding__2TJQ1\",\"doubleBorderTitle\":\"DoubleBorderTitle_doubleBorderTitle__1RtIo\",\"doubleBorderLineSegment1\":\"DoubleBorderTitle_doubleBorderLineSegment1__3FpBR\",\"doubleBorderLineSegment2\":\"DoubleBorderTitle_doubleBorderLineSegment2__JuulF\",\"doubleBorderLineSegment3\":\"DoubleBorderTitle_doubleBorderLineSegment3__3GEni\",\"doubleBorderLineSegment4\":\"DoubleBorderTitle_doubleBorderLineSegment4__2D3Ll\"};","// bn.js is what web3.utils.BN actually is\n// but bn.js only handles integers, so we use bignumber.js for more behaviors\nimport { BigNumber } from 'bignumber.js'; // not web3.utils.BN in 1.0.0-beta.34\n\n\nconst fmt = {\n  prefix: '',\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  groupSize: 3,\n  secondaryGroupSize: 0,\n  fractionGroupSeparator: ' ',\n  fractionGroupSize: 0,\n  suffix: ''\n}\nBigNumber.config({ FORMAT: fmt });\nBigNumber.config({ EXPONENTIAL_AT: 1e+9 });\n\nexport default BigNumber;\n","import axios from 'axios';\n\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n};\n\nconst fetchAddressInfo = async () => {\n  // https://raw.githubusercontent.com/self-token/global-data/master/addressInfo.json\n  const url = 'https://self-token.github.io/global-data/addressInfo.json';\n\n  const res = await axios.get(url);\n  if (res.status === 200) {\n    return res.data;\n  } else {\n    console.error('Error: failed to fetchAddressInfo.');\n    await sleep(1000);\n    const addressInfo = await fetchAddressInfo();\n    return addressInfo;\n  }\n};\n\nexport default fetchAddressInfo;\n","import fetchAddressInfo from 'utils/fetchAddressInfo';\n\n\nlet isInitialized = false;\nlet addressInfo = [];\nlet addressToInfo = {};\n\n// addresses must be in lower case\nconst addressesThatCanNotOwnScore = new Set([\n  '0x0000000000000000000000000000000000000000',\n]);\n\nexport const init = async () => {\n  if (isInitialized) { return; }\n  addressInfo = await fetchAddressInfo();\n  for (const info of addressInfo) {\n    addressToInfo[info.address.toLowerCase()] = info;\n  }\n  isInitialized = true;\n};\n\nexport const canAddressOwnScoreAsync = async (address) => {\n  if (!isInitialized) { await init(); }\n  const lowercase_address = address.toLowerCase();\n  if (addressesThatCanNotOwnScore.has(lowercase_address)) {\n    return false;\n  }\n  return true;\n};\n\nexport const getAddressScoreMultiplierAsync = async (address) => {\n  if (!isInitialized) { await init(); }\n  const lowercase_address = address.toLowerCase();\n  if (addressToInfo.hasOwnProperty(lowercase_address)) {\n    return addressToInfo[lowercase_address].selfer_score_multiplier;\n  }\n  return 0;\n};\n\nexport const getAddressNameAsync = async (address) => {\n  if (!isInitialized) { await init(); }\n  const lowercase_address = address.toLowerCase();\n  if (addressToInfo.hasOwnProperty(lowercase_address)) {\n    return addressToInfo[lowercase_address].full_name;\n  }\n  return '';\n};\n\nexport const getAddressName = (address) => {\n  const lowercase_address = address.toLowerCase();\n  if (addressToInfo.hasOwnProperty(lowercase_address)) {\n    return addressToInfo[lowercase_address].full_name;\n  }\n  return '';\n};\n\n// {\n//   \"address\": \"0xd79ed209ce09d0d92c7fbde8152be5ca672a64fa\",\n//   \"full_name\": \"SELF 私室\",\n//   \"name_beside_logo\": \"\",\n//   \"logo_file_name\": \"self_bar_v2.png\",\n//   \"is_feeless_in\": 1,\n//   \"selfer_score_multiplier\": 1\n// },\nexport const getAddressInfo = (address) => {\n  const lowercase_address = address.toLowerCase();\n  if (addressToInfo.hasOwnProperty(lowercase_address)) {\n    return addressToInfo[lowercase_address];\n  }\n  return null;\n};\n\nexport const getIsMerchantAddress = (address) => {\n  const lowercase_address = address.toLowerCase();\n  if (addressToInfo.hasOwnProperty(lowercase_address)) {\n    return Boolean(Number(addressToInfo[lowercase_address].is_feeless_in));\n  }\n  return false;\n};\n\n","import React, { Component } from \"react\";\n\nimport styles from \"styles/Spinner.module.css\";\n\nclass Spinner extends Component {\n  render() {\n    return <div className={ styles.spinner }></div>;\n  }\n}\n\n// cover the whole screen with a colored div, and render spinner in it\nclass SpinnerCover extends Component {\n  render() {\n    return <div className={ styles[\"spinner-cover-container\"] }>\n      <div className={ styles[\"spinner-cover-background\"] }>\n        <div className={ styles.spinner }></div>\n      </div>\n    </div>;\n  }\n}\n\nexport {\n  Spinner,\n  SpinnerCover,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\n\nimport localesData from 'data/locales.json';\n\nimport styles from \"styles/LanguageSelector.module.css\";\n\nclass LanguageSelector extends Component {\n  state = {\n    selectedLangCode: \"zh-TW\",\n    cookies: new Cookies(),\n  }\n\n  componentDidMount = async () => {\n    this.initLang();\n  }\n\n  isValidLangCode = langCode => {\n    return localesData.hasOwnProperty(langCode);\n  }\n\n  initLang = async () => {\n    const cookies = new Cookies();\n\n    // Load selectedLangCode from cookies\n    const selectedLangCodeInCookies = cookies.get('selectedLangCode'); // undefined if blank\n    let selectedLangCode = \"zh-TW\";\n    if (this.isValidLangCode(selectedLangCodeInCookies)) {\n      selectedLangCode = selectedLangCodeInCookies;\n      console.log(\"load language from cookies\", selectedLangCode);\n    } else {\n      // Get browser language.\n      const browserLangCode = (navigator.languages && navigator.languages[0]) ||\n      navigator.language ||\n      navigator.userLanguage;\n      console.log(\"browser language\", browserLangCode);\n\n      if (browserLangCode.substring(0, 2) === \"en\") {\n        selectedLangCode = \"en\";\n      } else if (browserLangCode === \"zh\" || browserLangCode === \"zh-TW\" || browserLangCode === \"zh-HK\") {\n        selectedLangCode = \"zh-TW\";\n      } else if (browserLangCode.substring(0, 2) === \"zh\") {\n        selectedLangCode = \"zh-CN\";\n      } else {\n        selectedLangCode = \"zh-TW\";\n      }\n      this.setState({\n        selectedLangCode: selectedLangCode,\n      })\n      console.log(\"load language from browser\", selectedLangCode);\n    }\n\n    this.setLangCode(selectedLangCode);\n    return selectedLangCode;\n  }\n\n  handleLangChange = (event) => {\n    this.setLangCode(event.target.value);\n  }\n\n  setLangCode = (langCode) => {\n    this.state.cookies.set('selectedLangCode', langCode, { path: '/' });\n    this.setState({ selectedLangCode: langCode });\n    this.props.setLangCode(langCode);\n  }\n\n  render() {\n    return (\n      <div>\n        <span><i className=\"fas fa-globe-americas\"></i></span>\n        <select className={ styles[\"lang-select\"] } value={this.state.selectedLangCode} onChange={this.handleLangChange}>\n          <option value=\"zh-TW\">繁體中文</option>\n          <option value=\"zh-CN\">简体中文</option>\n          <option value=\"en\">ENGLISH</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nLanguageSelector.propTypes = {\n  setLangCode: PropTypes.func,\n};\n\nLanguageSelector.defaultProps = {\n  setLangCode: () => {},\n};\n\nexport default LanguageSelector;\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport styles from \"styles/DoubleBorderTitle.module.css\";\n\nclass DoubleBorderTitle extends Component {\n  render() {\n    const { className, paddingType, children } = this.props;\n\n    const paddingClass = (paddingType === 'narrow') ? styles.narrowPadding : styles.normalPadding;\n\n    return (\n      <div className={ className }>\n        <span className={[\"font-weight-bold\", styles.doubleBorder, styles.doubleBorderTitle, paddingClass].join(' ')}>\n          <span>{ children }</span>\n          <span className={ styles.doubleBorderLineSegment1 }></span>\n          <span className={ styles.doubleBorderLineSegment2 }></span>\n          <span className={ styles.doubleBorderLineSegment3 }></span>\n          <span className={ styles.doubleBorderLineSegment4 }></span>\n        </span>\n      </div>\n    );\n  }\n}\n\nDoubleBorderTitle.propTypes = {\n  className: PropTypes.string,\n  paddingType: PropTypes.string,\n  // title: PropTypes.string,\n};\n\nDoubleBorderTitle.defaultProps = {\n  className: \"mb-3\",\n  paddingType: \"normal\",\n  // title: \"\",\n};\n\nexport default DoubleBorderTitle;\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport * as addressUtils from \"utils/addressUtils\"; // do `await addressUtils.init()` before using\n\n\nclass AddressName extends Component {\n  componentDidMount = async () => {\n    await addressUtils.init();\n  }\n  render() {\n    const { address } = this.props;\n    const addressInfo = addressUtils.getAddressInfo(address);\n    if (addressInfo) {\n      const img = ((!!addressInfo.logo_file_name) ?\n        <img className=\"address-name-logo\" src={ 'https://raw.githubusercontent.com/self-token/global-data/master/merchant_logos/' + addressInfo.logo_file_name } alt=\"address logo\" /> :\n        null\n      );\n      // const logo = require(imgPath);\n      return <div className=\"h5 font-weight-light mt-2 text-white\">\n        { img }\n        <p className=\"mt-2\">{ addressInfo.name_beside_logo }</p>\n      </div>\n    }\n    return null;\n  }\n}\n\nAddressName.propTypes = {\n  address: PropTypes.string,\n};\n\nAddressName.defaultProps = {\n  address: '0x0000000000000000000000000000000000000000',\n};\n\nexport default AddressName;\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport QRCode from 'qrcode';\n\nclass QrcodeImg extends Component {\n  state = {\n    qrcodeImgData: \"\",\n  }\n\n  componentDidMount() {\n    this.updateQrcodeImg(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateQrcodeImg(nextProps);\n  }\n\n  updateQrcodeImg = async (nextProps) => {\n    const qrcodeImgData = await QRCode.toDataURL(nextProps.text, {\n      width: nextProps.width,\n      margin: nextProps.margin,\n    });\n    this.setState({\n      qrcodeImgData,\n    });\n  };\n\n  render() {\n    const { qrcodeImgData } = this.state;\n\n    return <img src={ qrcodeImgData } alt=\"qrcode\" />\n  }\n}\n\nQrcodeImg.propTypes = {\n  text: PropTypes.string,\n  width: PropTypes.number,\n  margin: PropTypes.number,\n};\n\nQrcodeImg.defaultProps = {\n  text: \"\",\n  width: 256,\n  margin: 2,\n};\n\nexport default QrcodeImg;\n","const iconFolderUrl = \"https://raw.githubusercontent.com/self-token/global-data/master/wallet_app_icons/\"\n\nexport default [\n  {\n    id: \"messenger\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"SELF PAY\",\n    iconUrl: iconFolderUrl + \"messenger_256.png\",\n    paymentGuideMessages: [\n      \"1. 使用相機或 QR code 掃描器掃碼並在 Messenger 開啟\",\n      \"2. 送出付款金額 $tokenAmount 即可完成支付\",\n    ],\n  }, {\n    id: \"trust_wallet\", // lowercase, may be used in URL query\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"Trust Wallet\",\n    iconUrl: iconFolderUrl + \"trust_wallet_256.png\",\n    paymentGuideMessages: [\n      \"1. 使用相機或 QR code 掃描器掃碼\", // 開啟網頁\n      \"2. 在 Trust Wallet 中開啟支付頁面\", // 按下「Open in Trust Wallet」\n      \"3. 確認店家與數額無誤後，按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n    id: \"dapp_pocket\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"Dapp Pocket\",\n    iconUrl: iconFolderUrl + \"dapp_pocket_256.png\",\n    paymentGuideMessages: [\n      \"1. 打開 Dapp Pocket 進入「錢包」分頁\", // 點選下方「瀏覽」分頁\n      \"2. 點擊左上角掃碼圖示掃碼前往支付頁面並授權帳戶\",\n      \"3. 確認店家與數額無誤後，按下 Send 並簽章即可完成支付\",\n    ],\n  }, {\n  //   id: \"eventoken\",\n  //   isContractWallet: false,\n  //   isDappBrowser: false,\n  //   name: \"EvenToken\",\n  //   iconUrl: iconFolderUrl + \"eventoken_256.png\",\n  //   paymentGuideMessages: [\n  //     \"請傳送 $tokenAmount SELF 到此錢包地址\",\n  //     \"等候 1~3 分鐘，待交易上鏈即完成支付\",\n  //     \"（需要負擔 ETH 手續費）\",\n  //   ],\n  // }, {\n    id: \"imtoken\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"imToken\",\n    iconUrl: iconFolderUrl + \"imtoken_256.png\",\n    paymentGuideMessages: [\n      \"1. 打開 imToken 進入「錢包」分頁\", // 點選下方「瀏覽」分頁\n      \"2. 點擊右上角掃碼圖示掃碼進入支付頁面\",\n      \"3. 確認店家與數額無誤後，按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n    id: \"coinbase_wallet\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"Coinbase Wallet\",\n    iconUrl: iconFolderUrl + \"coinbase_wallet_256.png\",\n    paymentGuideMessages: [\n      \"1. 使用相機或 QR code 掃描器掃碼\", // 開啟網頁\n      \"2. 複製網址後在 Coinbase Wallet 的瀏覽器中貼上開啟支付頁面\",\n      \"3. 確認店家與數額無誤後，按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n    id: \"blocto\",\n    isContractWallet: true,\n    isDappBrowser: true,\n    name: \"Blocto\",\n    iconUrl: iconFolderUrl + \"blocto_256.png\",\n    paymentGuideMessages: [\n      \"1. 打開 Blocto 點選右上角人像圖示、點選支付\",\n      \"2. 找到 ETHEREUM 卡片，在 TOKEN 列表中找到 SELF TOKEN\",\n      \"3. 點選左下角「轉帳」，掃碼填入收款地址，輸入付款金額，送出交易\",\n      \"等候 1~3 分鐘，待交易上鏈即完成支付\",\n    ],\n  }, {\n    id: \"metamask_mobile_app\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"MetaMask App\",\n    iconUrl: iconFolderUrl + \"metamask_256.png\",\n    paymentGuideMessages: [\n      \"1. 打開 MetaMask App，點選左上角 ≡ 打開選單，點選「Wallet」\", // 開啟網頁\n      \"2. 點選右上角掃碼圖示掃碼開啟支付頁面\",\n      \"3. 確認店家與數額無誤後，按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n    id: \"opera_touch\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"Opera Touch\",\n    iconUrl: iconFolderUrl + \"opera_touch_256.png\",\n    paymentGuideMessages: [\n      \"1. 打開 Opera Touch 按下搜尋欄\", // 點選下方「瀏覽」分頁\n      \"2. 點擊鍵盤左上角掃碼圖示掃碼進入支付頁面\",\n      \"3. 確認店家與數額無誤後，按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n    id: \"cipher_wallet\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"Cipher Wallet\",\n    iconUrl: iconFolderUrl + \"cipher_wallet_256.png\",\n    paymentGuideMessages: [\n      \"1. 使用相機或 QR code 掃描器掃碼\", // 開啟網頁\n      \"2. 複製網址後在 Cipher Wallet 的瀏覽器中貼上開啟支付頁面\",\n      \"3. 確認店家與數額無誤後，按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n  //   id: \"argent\",\n  //   isContractWallet: true,\n  //   isDappBrowser: true,\n  //   name: \"Argent\",\n  //   iconUrl: iconFolderUrl + \"argent_256.png\",\n  // }, {\n    id: \"any_dapp_browser\",\n    isContractWallet: false,\n    isDappBrowser: true,\n    name: \"任何 DApp 瀏覽器\",\n    iconUrl: iconFolderUrl + \"any_dapp_browser_white.png\",\n    paymentGuideMessages: [\n      \"1. 使用相機或 QR code 掃描器掃碼\", // 開啟網頁\n      \"2. 複製網址後在您使用的 DApp 瀏覽器中貼上開啟支付頁面\",\n      \"3. 確認店家與數額無誤後按下 Send 並簽名即可完成支付\",\n    ],\n  }, {\n    id: \"any_erc20_token_wallet\",\n    isContractWallet: false,\n    isDappBrowser: false,\n    name: \"任何 ERC20 錢包\",\n    iconUrl: iconFolderUrl + \"any_erc20_token_wallet_white.png\",\n    paymentGuideMessages: [\n      \"請傳送 $tokenAmount SELF 到此錢包地址\",\n      \"等候 1~3 分鐘，待交易上鏈即完成支付\",\n      \"（需要負擔 ETH 手續費）\",\n    ],\n  },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import NumericInput from 'react-numeric-input';\n// import NumericInput from 'components/react-numeric-input/index';\n// import Modal from 'react-modal';\nimport { Modal, Form } from 'react-bootstrap';\nimport qs from 'qs';\nimport Cookies from 'universal-cookie';\n\nimport QrcodeImg from 'components/QrcodeImg.js';\n// import MerchantReceiveTokenProcedure from 'components/merchant/MerchantReceiveTokenProcedure.js';\nimport walletApps from 'data/walletApps.js';\n\n\n\nfunction isNumeric(num){\n  return !isNaN(num);\n}\n\nconst currencyList = ['ntd', 'self', 'none'];\nconst currencySet = new Set(currencyList);\nconst cookies = new Cookies();\n\nconst PAYMENT_STEPS = Object.freeze({\n  select_wallet_app: 1,\n  scan_qrcode: 2,\n  check_tx: 3,\n});\nconst FIRST_PAYMENT_STEP = PAYMENT_STEPS.select_wallet_app;\n// const LAST_PAYMENT_STEP = PAYMENT_STEPS.check_tx;\n\nconst computeReceivePaymentUrl = (baseUrl, address, selfAmount, browserId) => {\n  return (\n    baseUrl + 'trans'\n    + `?to=${address}`\n    + ( selfAmount ? `&self=${selfAmount}` : \"\" )\n    + `&browser=${browserId}`\n  );\n}\n\nclass MerchantReceiveToken extends Component {\n  state = {\n    baseUrl: \"https://selfer.selftoken.co/\",\n    isSelfAmountDesignated: true,\n    isShowingPaymentProcedureModal: false,\n    isShowingPayWithDappBrowserModal: false,\n    isShowingPayWithAnyWalletModal: false,\n    isTesting: false,\n    selfAmount: 100,\n    selfAmountInputValue: \"100\",\n    isValidSelfAmountInputValue: true,\n    ntdAmount: 300,\n    ntdAmountInputValue: 300,\n    isValidNtdAmountInputValue: true,\n    selectedCurrency: 'ntd', // 'ntd', 'self', 'none'\n    isShowingMoreInfoForPayingWithDappBrowser: false,\n\n    selectedWalletApp: null,\n    paymentStep: FIRST_PAYMENT_STEP,\n    isShowingAllWalletApps: false,\n  }\n\n  componentDidMount = async () => {\n    await this.loadSelectedCurrencyFromCookies();\n\n    // change baseUrl to window.location.origin if is testing\n    try {\n      console.log('MerchantReceiveToken this.props.location', this.props.location);\n      const queries = qs.parse(this.props.location.search, { ignoreQueryPrefix: true });\n      if (!!queries.testing) {\n        const baseUrl = window.location.origin + '/#/';\n        this.setState({\n          isTesting: true,\n          baseUrl,\n        });\n        console.log('is testing. Change baseUrl to ' + baseUrl);\n      }\n    } catch (error) {\n      console.error('MerchantReceiveToken componentDidMount ', error);\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // handleAmountChange = (value) => {\n  //   this.setState({\n  //     selfAmount: value,\n  //   });\n  // }\n\n  // handleNumericInputFocus = (event) => {\n  //   if (event.target.select) {\n  //     event.target.select();\n  //   }\n  // }\n\n  loadSelectedCurrencyFromCookies = async () => {\n    const selectedCurrency = cookies.get('selectedCurrency');\n    if (currencySet.has(selectedCurrency)) {\n      this.setState({\n        selectedCurrency,\n        isSelfAmountDesignated: (selectedCurrency !== 'none'),\n      });\n    }\n  }\n\n  saveSelectedCurrencyToCookies = async (selectedCurrency) => {\n    cookies.set('selectedCurrency', selectedCurrency, { path: '/' });\n  }\n\n  handleSelfAmountSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.isValidSelfAmountInputValue) {\n      this.showPayWithDappBrowserModal();\n    }\n  }\n\n  handleSelfAmountInputChange = (event) => {\n    console.log('handleSelfAmountInputChange', event);\n\n    // will be empty string when number is not valid\n    const selfAmountInputValue = event.target.value;\n\n    // if is empty string\n    if (!selfAmountInputValue) {\n      this.setState({\n        // selfAmountInputValue: '',\n        selfAmount: 0,\n        isValidSelfAmountInputValue: false,\n        // ntdAmountInputValue: '',\n        ntdAmount: 0,\n        // isValidNtdAmountInputValue: false,\n      });\n    }\n\n    const selfAmount = Number(selfAmountInputValue);\n    const isValidSelfAmountInputValue = isNumeric(selfAmount);\n    if (!isValidSelfAmountInputValue) {\n      this.setState({\n        // selfAmountInputValue: '',\n        selfAmount: 0,\n        isValidSelfAmountInputValue: false,\n        // ntdAmountInputValue: '',\n        ntdAmount: 0,\n        // isValidNtdAmountInputValue: false,\n      });\n    }\n\n    const ntdAmount = selfAmount * 3;\n    const ntdAmountInputValue = ntdAmount.toString();\n    this.setState({\n      selfAmountInputValue,\n      selfAmount,\n      isValidSelfAmountInputValue: true,\n      ntdAmountInputValue,\n      ntdAmount,\n      isValidNtdAmountInputValue: true,\n    });\n  }\n\n  handleNtdAmountInputChange = (event) => {\n    console.log('handleNtdAmountInputChange', event);\n\n    // will be empty string when number is not valid\n    const ntdAmountInputValue = event.target.value;\n\n    // if is empty string\n    if (!ntdAmountInputValue) {\n      this.setState({\n        // selfAmountInputValue: '',\n        selfAmount: 0,\n        // isValidSelfAmountInputValue: false,\n        // ntdAmountInputValue: '',\n        ntdAmount: 0,\n        isValidNtdAmountInputValue: false,\n      });\n    }\n\n    const ntdAmount = Number(ntdAmountInputValue);\n    const isValidNtdAmountInputValue = isNumeric(ntdAmount);\n    if (!isValidNtdAmountInputValue) {\n      this.setState({\n        // selfAmountInputValue: '',\n        selfAmount: 0,\n        // isValidSelfAmountInputValue: false,\n        // ntdAmountInputValue: '',\n        ntdAmount: 0,\n        isValidNtdAmountInputValue: false,\n      });\n    }\n\n    const selfAmount = Math.round(ntdAmount / 3);\n    const selfAmountInputValue = selfAmount.toString();\n    this.setState({\n      selfAmountInputValue,\n      selfAmount,\n      isValidSelfAmountInputValue: true,\n      ntdAmountInputValue,\n      ntdAmount,\n      isValidNtdAmountInputValue: true\n    });\n  }\n\n  selectEventTarget = (event) => {\n    if (event.target.select) {\n      event.target.select();\n    }\n  }\n\n  showPaymentProcedureModal = () => {\n    this.setState({\n      isShowingPaymentProcedureModal: true,\n      isShowingPayWithDappBrowserModal: false,\n      isShowingPayWithAnyWalletModal: false,\n    });\n  }\n\n  showPayWithDappBrowserModal = () => {\n    this.setState({\n      isShowingPayWithDappBrowserModal: true,\n      isShowingPayWithAnyWalletModal: false,\n    });\n  }\n\n  showPayWithAnyWalletModal = () => {\n    this.setState({\n      isShowingPayWithDappBrowserModal: false,\n      isShowingPayWithAnyWalletModal: true,\n    });\n  }\n\n  closeModals = () => {\n    this.setState({\n      isShowingPaymentProcedureModal: false,\n      isShowingPayWithDappBrowserModal: false,\n      isShowingPayWithAnyWalletModal: false,\n    });\n    // reset paymentStep after modal disappears\n    setTimeout(() => {\n      this.setState({\n        paymentStep: FIRST_PAYMENT_STEP,\n        isShowingAllWalletApps: false,\n      });\n    }, 300);\n  }\n\n  handleSelectedCurrencyChange = (event) => {\n    const selectedCurrency = event.target.value;\n    this.setState({\n      selectedCurrency,\n      isSelfAmountDesignated: (selectedCurrency !== 'none'),\n    });\n    this.saveSelectedCurrencyToCookies(selectedCurrency).then();\n  }\n\n  toggleShowingMoreInfoForPayingWithDappBrowser = () => {\n    this.setState({\n      isShowingMoreInfoForPayingWithDappBrowser: !this.state.isShowingMoreInfoForPayingWithDappBrowser\n    });\n  }\n\n  selectWalletApp = (app) => {\n    this.setState({\n      selectedWalletApp: app,\n      paymentStep: PAYMENT_STEPS.scan_qrcode,\n    });\n  }\n\n  toPreviousPaymentStep = () => {\n    const { paymentStep } = this.state;\n    if (paymentStep > FIRST_PAYMENT_STEP) {\n      this.setState({\n        paymentStep: paymentStep - 1,\n      });\n    } else {\n      this.setState({\n        paymentStep: FIRST_PAYMENT_STEP,\n      });\n    }\n  }\n\n  showAllWalletApps = () => {\n    this.setState({\n      isShowingAllWalletApps: true,\n    });\n  }\n\n  render() {\n    const {\n      strings,\n      address,\n      addressInfo,\n    } = this.props;\n\n    if (!address) {\n      return <div>\n        <div className=\"alert alert-danger\">{ strings.msg_no_account }</div>\n      </div>;\n    }\n\n    const {\n      baseUrl,\n      isSelfAmountDesignated,\n      selfAmount,\n      selfAmountInputValue,\n      isValidSelfAmountInputValue,\n      // ntdAmount,\n      ntdAmountInputValue,\n      isValidNtdAmountInputValue,\n      selectedCurrency,\n      // isShowingMoreInfoForPayingWithDappBrowser,\n      selectedWalletApp,\n      paymentStep,\n      isShowingAllWalletApps,\n    } = this.state;\n\n    const closeModalButton = (\n      <button type=\"button\" className=\"custom-modal-close-button\" onClick={this.closeModals}>\n        <span aria-hidden=\"true\"><i className=\"fas fa-times\"></i></span>\n        <span className=\"sr-only\">Close</span>\n      </button>\n    );\n\n    const toPreviousPaymentStepButton = (paymentStep === FIRST_PAYMENT_STEP) ? null :(\n      <button type=\"button\" className=\"custom-modal-back-button\" onClick={this.toPreviousPaymentStep}>\n        <span aria-hidden=\"true\"><i className=\"fas fa-chevron-left\"></i></span>\n        <span className=\"sr-only\">Back</span>\n      </button>\n    );\n\n    // let modalTitle = \"請選擇支付者使用的錢包 App\";\n    const walletAppSelector = (\n    <div className=\"payment-step-select-wallet-app text-center\">\n      { closeModalButton }\n      <div className=\"h4 px-4\">選擇支付用的錢包 App</div>\n      <div className=\"payment-wallet-app-buttons-container\">\n        {\n          isShowingAllWalletApps ?\n          walletApps.map((app) => { return (\n            <div key={ \"wallet-app-option-\" + app.id } className=\"wallet-app-block\" onClick={ () => { this.selectWalletApp(app) } }>\n              <div>\n                <img className=\"wallet-app-icon mb-1\" src={ app.iconUrl } alt={ app.name + \" icon\" } />\n              </div>\n              <div>{ app.name }</div>\n            </div>\n          );})\n          :\n          walletApps.slice(0, 3).map((app) => { return (\n            <div key={ \"wallet-app-option-\" + app.id } className=\"wallet-app-block\" onClick={ () => { this.selectWalletApp(app) } }>\n              <div>\n                <img className=\"wallet-app-icon mb-1\" src={ app.iconUrl } alt={ app.name + \" icon\" } />\n              </div>\n              <div>{ app.name }</div>\n            </div>\n          );})\n          .concat([\n            <div key=\"wallet-app-option-more-apps\" className=\"wallet-app-block\" onClick={ this.showAllWalletApps }>\n              <div>\n                <img className=\"wallet-app-icon mb-1\" alt={ \"show all wallet apps\" } src=\"https://raw.githubusercontent.com/self-token/global-data/master/wallet_app_icons/more_apps.png\" />\n              </div>\n              <div>More Apps</div>\n            </div>\n          ])\n        }\n      </div>\n    </div>);\n\n    let walletAppPaymentGuide = null;\n    if (!!selectedWalletApp) {\n      const displayedSelfAmount = isSelfAmountDesignated ? selfAmount : '';\n      let qrcodeContent = address;\n      let qrcodeMsg = address;\n      if (selectedWalletApp.id === 'messenger') {\n        qrcodeContent = `https://m.me/selftoken?ref=merchant--${address}`;\n        qrcodeMsg = `在 Messenger 向 ${address} 支付 SELF`;\n      }\n      else if (selectedWalletApp.isDappBrowser && !selectedWalletApp.isContractWallet) {\n        qrcodeContent = computeReceivePaymentUrl(\n          baseUrl,\n          address,\n          isSelfAmountDesignated ? selfAmount : null,\n          selectedWalletApp.id\n        );\n        qrcodeMsg = `在 SELF DApp 向 ${address} 支付 ${displayedSelfAmount} SELF`;\n      }\n      else {\n        qrcodeContent = address;\n        qrcodeMsg = address;\n      }\n\n      walletAppPaymentGuide = (\n        <div className=\"payment-step-scan-qrcode text-center\">\n          { toPreviousPaymentStepButton }\n          { closeModalButton }\n          <div className=\"h5 mb-3\">\n            <div className=\"\">使用 { selectedWalletApp.name }</div>\n            <div className=\"\">\n              向 <span className=\"text-white\">{ addressInfo.full_name }</span> 支付 <span className=\"text-white\">{ displayedSelfAmount }</span> SELF\n            </div>\n          </div>\n\n          <div className=\"mb-2\">\n            {\n              selectedWalletApp.paymentGuideMessages.map(msg => {\n                const splitMsg = msg.split('$tokenAmount')\n                if (splitMsg.length === 2) {\n                  return <div>{ splitMsg[0] }<span className=\"text-white\">{ displayedSelfAmount }</span>{ splitMsg[1] }</div>\n                }\n                return <div>{ msg }</div>\n              })\n            }\n          </div>\n\n          <div className=\"mb-1\">\n            <div className=\"mb-1\">\n              <QrcodeImg text={ qrcodeContent } width={ 320 } margin={ 2 } />\n            </div>\n            <div className=\"text-additional\">{ qrcodeMsg }</div>\n          </div>\n        </div>\n      );\n    }\n\n    let modalContent = walletAppSelector;\n    if (paymentStep === PAYMENT_STEPS.select_wallet_app) {\n      modalContent = walletAppSelector;\n    } else if (paymentStep === PAYMENT_STEPS.scan_qrcode) {\n      modalContent = walletAppPaymentGuide;\n    }\n\n    return (\n      <>\n        <Modal\n          size=\"lg\"\n          show={this.state.isShowingPaymentProcedureModal}\n          onHide={this.closeModals}\n          centered={ true }\n        >\n          {/* <Modal.Header closeButton></Modal.Header> */}\n          {/* <button type=\"button\" className=\"custom-modal-close-button close\" onClick={this.closeModals}>\n            <span aria-hidden=\"true\">×</span>\n            <span className=\"sr-only\">Close</span>\n          </button> */}\n          <Modal.Body className=\"p-3\">\n            <div>\n              {/* <button></button> */}\n              {/* <div></div> */}\n              {/* <button type=\"button\" className=\"custom-modal-close-button\" onClick={this.closeModals}>\n                <span aria-hidden=\"true\">×</span>\n                <span className=\"sr-only\">Close</span>\n              </button> */}\n            </div>\n\n            { modalContent }\n          </Modal.Body>\n        </Modal>\n\n        <div className=\"self-amount-inputter text-center\">\n          <div className=\"mb-1\">\n            <Form.Control as=\"select\"\n              className=\"merchant-currency-selector\"\n              value={selectedCurrency}\n              onChange={this.handleSelectedCurrencyChange}\n            >\n              <option value=\"ntd\">{ strings.NTD }</option>\n              <option value=\"self\">{ strings.EN_SELF }</option>\n              <option value=\"none\">{ strings.unlimited_payment_amount }</option>\n            </Form.Control>\n          </div>\n\n          <div className=\"mb-3\">\n            <form onSubmit={this.handleSelfAmountSubmit} noValidate>\n              { selectedCurrency === \"self\" && <>\n                <input\n                  type=\"number\"\n                  className={\n                    \"numeric-input \"\n                    + (isValidSelfAmountInputValue ? \"\" : \"not-valid-input \")\n                  }\n                  value={ selfAmountInputValue }\n                  // onChange={this.handleSelfAmountInputChange}\n                  onInput={this.handleSelfAmountInputChange}\n                  onFocus={this.selectEventTarget}\n                />\n              </>}\n              { selectedCurrency === \"ntd\" && <>\n                <input\n                  type=\"number\"\n                  className={\n                    \"numeric-input mb-1 \"\n                    + (isValidNtdAmountInputValue ? \"\" : \"not-valid-input \")\n                  }\n                  value={ ntdAmountInputValue }\n                  // onChange={this.handleSelfAmountInputChange}\n                  onInput={this.handleNtdAmountInputChange}\n                  onFocus={this.selectEventTarget}\n                />\n                <p>= {selfAmount} SELF</p>\n              </>}\n            </form>\n          </div>\n\n          <div className=\"mb-3\">\n            <button className=\"solid-rectangle-button bg-golden\" onClick={ this.showPaymentProcedureModal }>{ strings.Receive_Payment }</button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nMerchantReceiveToken.propTypes = {\n  address: PropTypes.string,\n  strings: PropTypes.object,\n  location: PropTypes.object,\n  addressInfo: PropTypes.object,\n};\n\nMerchantReceiveToken.defaultProps = {\n  address: '',\n  strings: {},\n  location: {},\n  addressInfo: {},\n};\n\nexport default MerchantReceiveToken;\n","import axios from 'axios';\n\nconst fetchUserTokenTransferEvents = async (contractAddress, userAddress, ascending=true) => {\n  const url = `https://api.etherscan.io/api?module=account&action=tokentx&contractaddress=${contractAddress}&address=${userAddress}&page=1&offset=10000&sort=${ascending?\"asc\":\"desc\"}`; // &apikey=YourApiKeyToken\n\n  const res = await axios.get(url);\n  if (res.status === 200) {\n    // const userTokenTransferEvents = res.data.result;\n    return res.data.result;\n  } else {\n    console.warning('Warning: failed to fetch userTokenTransferEvents from etherscan.');\n    return [];\n  }\n};\n\nexport default fetchUserTokenTransferEvents;\n\n// url example: https://api.etherscan.io/api?module=account&action=tokentx&contractaddress=0x67ab11058ef23d0a19178f61a050d3c38f81ae21&address=0x7549fa152b92BBC818285e6D0A48857381fAAB5D&page=1&offset=10000&sort=desc\n\n/*\nres:\n{\n  status: 200,\n  data: {\n    \"status\": \"1\",\n    \"message\": \"OK\",\n    \"result\": [\n      {\n        \"blockNumber\": \"8744220\",\n        \"timeStamp\": \"1571119974\",\n        \"hash\": \"0x08d342f4de9ffe7756d661fe5f4939d75ddc4ebecc7d437238a5a577b2d83865\",\n        \"nonce\": \"763\",\n        \"blockHash\": \"0x66a08daefe057eda11e6bc95f906a878fa3b700feb760f6485c69f0626508f73\",\n        \"from\": \"0x10a51d96deaac5f3266b965901e5c83dc27ac00b\",\n        \"contractAddress\": \"0x67ab11058ef23d0a19178f61a050d3c38f81ae21\",\n        \"to\": \"0x9dbd361c6c8af19eb4ea20605dc49fd4731f2248\",\n        \"value\": \"123000000000000000000\",\n        \"tokenName\": \"SELF TOKEN\",\n        \"tokenSymbol\": \"SELF\",\n        \"tokenDecimal\": \"18\",\n        \"transactionIndex\": \"87\",\n        \"gas\": \"150000\",\n        \"gasPrice\": \"1000000001\",\n        \"gasUsed\": \"91680\",\n        \"cumulativeGasUsed\": \"6269604\",\n        \"input\": \"deprecated\",\n        \"confirmations\": \"415935\"\n      },\n      ...\n    ]\n  }\n}\n*/","import React from \"react\";\nimport * as moment from 'moment';\nimport BigNumber from 'utils/BigNumber';\n\n\nexport function formatTransaction(txHash, withIcon=true) {\n  if (typeof(txHash) !== \"string\") { return ''; }\n  if (withIcon) {\n    return (\n      <span>\n        <span className=\"font-monospace\" title={ txHash }>{ `${txHash.substr(2, 8)}` } </span>\n        <a className=\"font-monospace\" title={ txHash } href={ `https://etherscan.io/tx/${txHash}` } target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fas fa-external-link-alt\"></i>\n        </a>\n      </span>\n    );\n  }\n  return (\n    <a className=\"font-monospace\" title={ txHash } href={ `https://etherscan.io/tx/${txHash}` } target=\"_blank\" rel=\"noopener noreferrer\">\n      { `${txHash.substr(2, 8)} ` }\n    </a>\n  );\n}\n\nexport function formatTransactionIcon(txHash) {\n  if (typeof(txHash) !== \"string\") { return ''; }\n  return (\n    <a className=\"font-monospace\" title={ txHash } href={ `https://etherscan.io/tx/${txHash}` } target=\"_blank\" rel=\"noopener noreferrer\">\n      <i className=\"fas fa-external-link-alt\"></i>\n    </a>\n  );\n}\n\nexport function formatAddress(address) {\n  if (typeof(address) !== \"string\") { return ''; }\n  return (\n    <a className=\"font-monospace\" title={ address } href={ `https://etherscan.io/token/0x67ab11058ef23d0a19178f61a050d3c38f81ae21?a=${address}` } target=\"_blank\" rel=\"noopener noreferrer\">\n      { `${address.substr(2, 8)}...${address.substr(-4)}` }\n    </a>\n  );\n}\n\nexport function formatTimestamp(timestamp) {\n  let timestampNum;\n  if (typeof(timestamp) === \"number\") {\n    timestampNum = timestamp;\n  }\n  else if (typeof(timestamp) === \"string\") {\n    timestampNum = parseInt(timestamp);\n  }\n  else { // BigNumber\n    timestampNum = timestamp.toNumber();\n  }\n  return moment.unix(timestampNum).format(\"YYYY-MM-DD HH:mm\");\n}\n\nexport function formatWeiToEther(wei, decimalPlaces=2) {\n  const weiBN = new BigNumber(wei);\n  const etherBN = weiBN.div(1e18);\n  const roundedEtherBN = new BigNumber(etherBN.toFixed(decimalPlaces));\n  return roundedEtherBN.toFormat();\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport io from 'socket.io-client'\nimport axios from 'axios';\nimport fetchUserTokenTransferEvents from 'utils/fetchUserTokenTransferEvents';\nimport { formatTransaction, formatTransactionIcon, formatAddress, formatTimestamp, formatWeiToEther } from 'utils/formatData';\nimport * as moment from 'moment';\nimport BigNumber from 'utils/BigNumber';\n// import * as retry from 'async-retry';\n\n\nfunction formatRefundInfo(event) {\n  if (!!event.refundTransferEvent) {\n    return <span>\n      { `-${formatWeiToEther(event.refundTransferEvent.value)} ` }\n      { formatTransactionIcon(event.refundTransferEvent.hash) }\n    </span>;\n  }\n  return '';\n}\n\nfunction formatOrder(order) {\n  return {\n    \"timeStamp\": Math.floor(Date.parse(order.hash_time) / 1000),\n    \"hash\": order.hash,\n    \"from\": order.data.transfer_from ? order.data.transfer_from.toLowerCase() :\n      (order.wallet ? order.wallet.toLowerCase() : ''),\n    \"contractAddress\": \"0x67ab11058ef23d0a19178f61a050d3c38f81ae21\",\n    \"to\": order.data.params._to.toLowerCase(),\n    \"value\": order.data.params._value,\n    \"status\": order.status,\n    \"index\": parseInt(order._id),\n    \"indexIsOrderId\": true,\n  }\n}\n\nfunction formatTransferEvent(event, index) {\n  return {\n    \"timeStamp\": parseInt(event.timeStamp),\n    \"hash\": event.hash,\n    \"from\": event.from,\n    \"contractAddress\": event.contractAddress,\n    \"to\": event.to,\n    \"value\": event.value,\n    \"status\": 'success',\n    \"index\": '',\n    \"indexIsOrderId\": false,\n  }\n}\n\nfunction formatOrderIndex(index, indexIsOrderId) {\n  return <span>{ index }</span>\n}\n\nfunction formatStatus(statusStr) {\n  if (statusStr === 'success') {\n    return <i className=\"text-success fas fa-check-double\" title=\"transaction confirmed\"></i>\n  }\n  if (statusStr === 'pending') {\n    return <i className=\"text-success fas fa-check\" title=\"transaction submitted\"></i>\n    // return <i className=\"text-secondary fas fa-ellipsis-h\"></i>\n  }\n  if (statusStr === 'error') {\n    return <i className=\"text-danger fas fa-times\" title=\"transaction failed\"></i>\n  }\n  return \"\";\n}\n\nfunction formatOrderRowClass(statusStr) {\n  if (statusStr === 'pending') {\n    // return \"order-pending\"\n    return \"\"\n  }\n  if (statusStr === 'error') {\n    return \"order-error\"\n  }\n  return \"\";\n}\n\nconst getMonthIdOfOrder = (order) => {\n  // in current timezone\n  return moment.unix(order.timeStamp).format(\"YYYY-MM\");\n}\n\nconst groupOrdersByMonth = (orders) => {\n  // orders must be chronologically sorted\n  // ordersByMonth = [ { monthId: '2020-01', orders: [] }, ... ]\n  const ordersByMonth = [];\n  for (const order of orders) {\n    const monthId = getMonthIdOfOrder(order);\n    if (ordersByMonth.length === 0 || ordersByMonth[ordersByMonth.length - 1].monthId !== monthId) {\n      ordersByMonth.push({\n        monthId: monthId,\n        orders: [],\n      });\n    }\n    ordersByMonth[ordersByMonth.length - 1].orders.push(order);\n  }\n\n  // add totalValue to monthlyData\n  ordersByMonth.forEach(monthlyData => {\n    let totalValue = new BigNumber(0);\n    for (const order of monthlyData.orders) {\n      if (order.status === \"success\") {\n        totalValue = totalValue.plus(new BigNumber(order.value));\n        if (!!order.refundTransferEvent) {\n          totalValue = totalValue.minus(new BigNumber(order.refundTransferEvent.value));\n        }\n      }\n    }\n    monthlyData.totalValue = totalValue;\n  })\n\n  return ordersByMonth;\n}\n\nclass MerchantOrders extends Component {\n  state = {\n    selfTokenContractAddress: '0x67ab11058ef23d0a19178f61a050d3c38f81ae21',\n    selfPayServerUrl: 'https://api.selftoken.co',\n\n    txHashToTransferEvent: {},\n    completedIncomingTransfers: [],\n    completedTxHashes: new Set(),\n    incomingOrders: [],\n    incomingOrderTxHashes: new Set(),\n    displayedOrders: [],\n    displayedOrdersByMonth: [],\n    abnormalTxDocs: {\n      testTxDocs: [],\n      txHashToTestTxDoc: {},\n      refundTxDocs: [],\n      paymentTxHashToRefundTxDoc: {},\n    },\n\n    pollIntervalIds: [],\n    isOrdersReceived: false,\n    lastUpdatedTimeStamp: Math.floor(Date.now() / 1000),\n    nowTimeStamp: Math.floor(Date.now() / 1000),\n  };\n\n  async componentDidMount() {\n    const { selfPayServerUrl } = this.state;\n\n    // await this.fetchAbnormalTxDocs();\n    this.fetchAbnormalTxDocs().then();\n\n    await this.fetchCompletedIncomingTransfers();\n\n    // subscribe to self pay server (for delegated transfer)\n    const socket = io(selfPayServerUrl);\n    socket.on('orders', (orders) => {\n      this.setState({ isOrdersReceived: true })\n      this.processOrders(orders);\n    });\n\n    // trigger the server to broadcast orders\n    this.getOrders(1000);\n\n    // poll\n    const pollIntervalIds = [];\n    pollIntervalIds.push(\n      setInterval(() => {\n        this.setState({\n          nowTimeStamp: Math.floor(Date.now() / 1000),\n        });\n      }, 1000)\n    );\n    pollIntervalIds.push(\n      setInterval(() => {\n        this.fetchCompletedIncomingTransfers();\n      }, 15000)\n    );\n    pollIntervalIds.push(\n      setInterval(() => {\n        this.fetchAbnormalTxDocs();\n      }, 60000)\n    );\n    this.setState({\n      pollIntervalIds,\n    });\n  }\n\n  componentWillUnmount = () => {\n    const { pollIntervalIds } = this.state;\n    for (const intervalId of pollIntervalIds) {\n      clearInterval(intervalId);\n    }\n  }\n\n  async fetchAbnormalTxDocs() {\n    console.log('fetchAbnormalTxDocs');\n\n    const { selfPayServerUrl } = this.state;\n\n    const abnormal_txs = await axios.get(`${selfPayServerUrl}/abnormal_txs`);\n    console.log('abnormal_txs', abnormal_txs);\n\n    const testTxDocs = abnormal_txs.data.data.tx_test;\n    const txHashToTestTxDoc = {};\n    for (const testTxDoc of abnormal_txs.data.data.tx_test) {\n      txHashToTestTxDoc[testTxDoc.tx_hash] = testTxDoc;\n    }\n\n    const refundTxDocs = abnormal_txs.data.data.tx_refund;\n    const paymentTxHashToRefundTxDoc = {};\n    for (const refundTxDoc of abnormal_txs.data.data.tx_refund) {\n      paymentTxHashToRefundTxDoc[refundTxDoc.payment_tx_hash] = refundTxDoc;\n    }\n\n    this.setState({\n      abnormalTxDocs: {\n        testTxDocs,\n        txHashToTestTxDoc,\n        refundTxDocs,\n        paymentTxHashToRefundTxDoc,\n      },\n    });\n  }\n\n  getOrders(retryAfterMs) {\n    console.log('getOrders', retryAfterMs);\n    console.log('this.state.isOrdersReceived', this.state.isOrdersReceived);\n\n    const { selfPayServerUrl } = this.state;\n\n    if (this.state.isOrdersReceived) { return; }\n\n    axios.get(`${selfPayServerUrl}/getOrders`);\n\n    // try again after x seconds\n    setTimeout(() => { this.getOrders(retryAfterMs * 2) }, retryAfterMs);\n  }\n\n  async fetchCompletedIncomingTransfers() {\n    console.log('fetchCompletedIncomingTransfers');\n\n    const { merchantAddress } = this.props;\n    const { selfTokenContractAddress } = this.state;\n\n    const merchantSelfTokenTransferEvents = await fetchUserTokenTransferEvents(selfTokenContractAddress, merchantAddress); // ascending order\n\n    if (!Array.isArray(merchantSelfTokenTransferEvents)) {\n      console.warn(\"fetchCompletedIncomingTransfers failed.\");\n      return;\n    }\n\n    // console.log('merchantSelfTokenTransferEvents', merchantSelfTokenTransferEvents);\n    this.setState({\n      lastUpdatedTimeStamp: Math.floor(Date.now() / 1000),\n    });\n\n    // update this.state.txHashToTransferEvent\n    merchantSelfTokenTransferEvents.forEach(event => {\n      this.state.txHashToTransferEvent[event.hash] = event;\n    });\n\n    // filter incoming tx\n    // new is relative to the previously fetched data\n    const newCompletedIncomingTransfers = merchantSelfTokenTransferEvents.filter(event => event.to.toLowerCase() === merchantAddress.toLowerCase());\n\n    // filter outgoing tx\n    const newCompletedOutgoingTransfers = merchantSelfTokenTransferEvents.filter(event => event.from.toLowerCase() === merchantAddress.toLowerCase());\n\n    // if no new transfers, do nothing\n    if (newCompletedIncomingTransfers.length < this.state.completedIncomingTransfers.length) {\n      return;\n    }\n\n    const completedTxHashes = new Set(merchantSelfTokenTransferEvents.map(event => event.hash));\n\n    await this.setState({\n      completedIncomingTransfers: newCompletedIncomingTransfers,\n      completedOutgoingTransfers: newCompletedOutgoingTransfers,\n      completedTxHashes,\n    });\n    this.mergeOrders();\n  }\n\n  async processOrders(orders) {\n    console.log('processOrders');\n\n    const { merchantAddress } = this.props;\n\n    // filter incoming orders to this merchant\n    const incomingOrders = orders.filter(order => {\n      return order.tx && (order.data.params._to.toLowerCase() === merchantAddress.toLowerCase())\n    });\n\n    const incomingOrderTxHashes = new Set(incomingOrders.map(order => order.hash))\n\n    await this.setState({\n      incomingOrders,\n      incomingOrderTxHashes,\n      lastUpdatedTimeStamp: Math.floor(Date.now() / 1000),\n    });\n    this.mergeOrders();\n  }\n\n  mergeOrders() {\n    console.log('mergeOrders');\n\n    const { fromTimeStamp, isGroupedByMonth } = this.props;\n    const {\n      txHashToTransferEvent,\n      completedIncomingTransfers,\n      completedTxHashes,\n      incomingOrders,\n      incomingOrderTxHashes,\n      abnormalTxDocs,\n    } = this.state;\n\n    /* process orders */\n\n    // update status\n    incomingOrders.forEach(order => {\n      if (completedTxHashes.has(order.hash)) {\n        order.status = 'success';\n      }\n    });\n\n    // // filter out completed orders\n    // const uncompletedIncomingOrders = incomingOrders.filter(order => {\n    //   return !(completedTxHashes.has(order.hash));\n    // });\n    // // format orders\n    // const formattedUncompletedIncomingOrders = uncompletedIncomingOrders.map(formatOrder);\n\n    // format orders\n    const formattedIncomingOrders = incomingOrders.map(formatOrder);\n\n    /* process transfer events */\n\n    // filter out delegated transfers (in orders)\n\n    const completedIncomingTransfersNotOrders = completedIncomingTransfers.filter(event => {\n      return !(incomingOrderTxHashes.has(event.hash));\n    });\n\n    // format transfer events\n    const formattedCompletedIncomingTransfersNotOrders = completedIncomingTransfersNotOrders.map(formatTransferEvent);\n\n    // merge completedIncomingTransfers and uncompletedIncomingOrders\n    let displayedOrders = formattedIncomingOrders.concat(formattedCompletedIncomingTransfersNotOrders);\n\n    // hide testing txs\n    displayedOrders = displayedOrders.filter(order => {\n      return !abnormalTxDocs.txHashToTestTxDoc.hasOwnProperty(order.hash)\n    });\n    // hide txs before fromTimeStamp if necessary\n    if (!!fromTimeStamp) {\n      displayedOrders = displayedOrders.filter(order => order.timeStamp >= fromTimeStamp);\n    }\n\n    // link refund txs to payment txs\n    displayedOrders.forEach(order => {\n      if (abnormalTxDocs.paymentTxHashToRefundTxDoc.hasOwnProperty(order.hash)) {\n        const refundTxDoc = abnormalTxDocs.paymentTxHashToRefundTxDoc[order.hash];\n        const refundTxHash = refundTxDoc.refund_tx_hash;\n        const refundTransferEvent = txHashToTransferEvent[refundTxHash];\n        order.refundTransferEvent = refundTransferEvent;\n        order.refundTxDoc = refundTxDoc;\n      }\n    })\n\n    // sort displayedOrders in descending chronological order\n    displayedOrders.sort((o1, o2) => {\n      let order = o1.timeStamp - o2.timeStamp;\n      if (order === 0) { order = o1.index - o2.index; }\n      return -order;\n    });\n\n    this.setState({\n      displayedOrders,\n    });\n\n    if (isGroupedByMonth) {\n      this.setState({\n        displayedOrdersByMonth: groupOrdersByMonth(displayedOrders),\n      });\n    }\n  }\n\n  render() {\n    const {\n      isGroupedByMonth,\n    } = this.props;\n\n    const {\n      displayedOrders,\n      displayedOrdersByMonth,\n      lastUpdatedTimeStamp,\n      nowTimeStamp,\n    } = this.state;\n\n    const updatedSecondsAgo = Math.max(0, nowTimeStamp - lastUpdatedTimeStamp);\n\n    if (isGroupedByMonth) {\n      return (\n        <div className=\"position-relative mb-5\">\n          <div className=\"text-additional text-right\">{ updatedSecondsAgo } 秒前更新</div>\n          {\n            displayedOrdersByMonth.map(monthlyData => {\n              return (\n                <div className=\"order-group-by-month mb-5\">\n                  <div className=\"month-title h5 text-center\">{ monthlyData.monthId }</div>\n                  <div className=\"month-title text-center mb-3\">Total: { formatWeiToEther(monthlyData.totalValue, 2) } SELF</div>\n                  <table className=\"orders-table\">\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>ID</th>\n                        <th>From</th>\n                        <th>SELF</th>\n                        <th>Confirmed At</th>\n                        <th>TX</th>\n                        <th>Status</th>\n                        <th>Refund</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"text-secondary\">\n                      {\n                        monthlyData.orders.map((event, index) => {\n                          return (\n                            <tr key={ event.hash } className={ formatOrderRowClass(event.status) }>\n                              <td>{ formatOrderIndex(event.index, event.indexIsOrderId) }</td>\n                              <td>{ formatAddress(event.from) }</td>\n                              <td>{ formatWeiToEther(event.value, 2) }</td>\n                              <td>{ formatTimestamp(event.timeStamp) }</td>\n                              <td>{ formatTransaction(event.hash, true) }</td>\n                              <td>{ formatStatus(event.status) }</td>\n                              <td>{ formatRefundInfo(event) }</td>\n                            </tr>\n                          );\n                        })\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              );\n            })\n          }\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"position-relative\" style={{ maxHeight: \"calc(100vh - 10rem)\", overflow: \"scroll\", paddingBottom: \"1rem\" }}>\n        <div className=\"text-additional text-right\">{ updatedSecondsAgo } 秒前更新</div>\n        {\n          <table className=\"orders-table\">\n            <thead className=\"text-primary\">\n              <tr>\n                <th>ID</th>\n                <th>From</th>\n                <th>SELF</th>\n                <th>Confirmed At</th>\n                <th>TX</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-secondary\">\n              {\n                displayedOrders.map((event, index) => {\n                  return <tr key={ event.hash } className={ formatOrderRowClass(event.status) }>\n                    <td>{ formatOrderIndex(event.index, event.indexIsOrderId) }</td>\n                    <td>{ formatAddress(event.from) }</td>\n                    <td>{ formatWeiToEther(event.value, 2) }</td>\n                    <td>{ formatTimestamp(event.timeStamp) }</td>\n                    <td>{ formatTransactionIcon(event.hash) }</td>\n                    <td>{ formatStatus(event.status) }</td>\n                  </tr>\n                })\n              }\n            </tbody>\n          </table>\n        }\n      </div>\n    );\n  }\n}\n\nMerchantOrders.propTypes = {\n  strings: PropTypes.object,\n  accounts: PropTypes.array,\n  fromTimeStamp: PropTypes.number,\n  isGroupedByMonth: PropTypes.bool,\n};\n\nMerchantOrders.defaultProps = {\n  strings: {},\n  accounts: [],\n  fromTimeStamp: 0,\n  isGroupedByMonth: true,\n};\n\nexport default MerchantOrders;\n","import React, { Component } from \"react\";\n// import PropTypes from 'prop-types';\nimport LocalizedStrings from 'react-localization';\nimport Web3 from \"web3\";\nimport BigNumber from 'utils/BigNumber';\n// import BN from 'bn.js'; // dependency of web3\n// import Iframe from 'react-iframe';\n// import { Navbar, Nav } from 'react-bootstrap';\n\nimport \"styles/AddressInput.css\";\nimport \"styles/NumericInput.css\";\n// import \"App.css\";\n\nimport SelfTokenJSON from \"contracts/SelfToken.json\";\nimport localesData from 'data/locales.json';\n\nimport * as addressUtils from \"utils/addressUtils\"; // do `await addressUtils.init()` before using\n\nimport { Spinner } from \"components/Spinner.js\";\nimport LanguageSelector from \"components/LanguageSelector.js\";\nimport DoubleBorderTitle from \"components/DoubleBorderTitle.js\";\nimport AddressName from 'components/AddressName.js';\n// import MerchantBalances from \"components/merchant/MerchantBalances.js\";\nimport MerchantReceiveToken from \"components/merchant/MerchantReceiveToken.js\";\nimport MerchantOrders from \"components/merchant/MerchantOrders.js\";\nimport { formatWeiToEther } from 'utils/formatData';\n\n\nconst strings = new LocalizedStrings(localesData);\nconst pages = Object.freeze({\n  receive_payment: 1,\n  dashboard: 2,\n});\n\nclass MerchantApp extends Component {\n  state = {\n    web3: null,\n    // networkId: 1,\n    contractAddress: '',\n    selfTokenContract: null,\n    address: '',\n    isMerchantAddress: false,\n    isShowingBalances: false,\n    accountState: {\n      // ethBalanceBN: new BigNumber(0),\n      selfBalanceBN: new BigNumber(0),\n    },\n    isAllDataFetched: false,\n    pollIntervalId: -1,\n    showingPage: pages.receive_payment,\n  };\n\n  componentDidMount = async () => {\n    try {\n      console.log(\"MerchantApp this.props\", this.props);\n\n      const address = this.props.match.params.address;\n      await addressUtils.init();\n      const isMerchantAddress = addressUtils.getIsMerchantAddress(address);\n      const addressInfo = addressUtils.getAddressInfo(address);\n      console.log(\"address\", address);\n      this.setState({\n        address,\n        isMerchantAddress,\n        addressInfo,\n      });\n\n      if (isMerchantAddress) {\n        const provider = new Web3.providers.HttpProvider(\n          \"https://mainnet.infura.io/v3/9e7e582e49d14542b1dc8086c96d398e\" // roger@selftoken.co - self pay merchant\n        );\n        const web3 = new Web3(provider);\n\n        // Init contract instance.\n        const networkId = 1;\n        const contractAddress = SelfTokenJSON.networks[networkId].address;\n        const selfTokenContract = new web3.eth.Contract(\n          SelfTokenJSON.abi,\n          contractAddress\n        );\n        await this.setState({\n          web3,\n          contractAddress,\n          selfTokenContract,\n        });\n\n        const pollIntervalId = setInterval(() => {\n          this.poll();\n        }, 10000);\n        this.setState({ pollIntervalId });\n        await this.poll();\n      }\n\n      this.setState({\n        isAllDataFetched: true,\n      });\n    } catch (error) {\n      console.error('MerchantApp componentDidMount', error);\n      this.setState({\n        isAllDataFetched: true,\n      });\n    }\n  }\n\n  componentWillUnmount = () => {\n    const { pollIntervalId } = this.state;\n    if (pollIntervalId !== -1) {\n      clearInterval(pollIntervalId);\n    }\n  }\n\n  poll = async () => {\n    console.log(\"poll\");\n\n    this.fetchAccountState();\n  }\n\n  fetchAccountState = async () => {\n    console.log(\"fetchAccountState\");\n\n    const { address, selfTokenContract } = this.state;\n\n    // If there are no accounts injected, return.\n    if (!address) {\n      return;\n    }\n\n    // // promises\n    // const getEthBalance = web3.eth.getBalance(address);\n    // const getSelfBalance = selfTokenContract.methods.balanceOf(address).call();\n    // const values = await Promise.all([getEthBalance, getSelfBalance]);\n    // const ethBalanceStr = values[0];\n    // const selfBalanceStr = values[1];\n\n    // // Make a clone of accountState.\n    // let accountState = Object.assign({}, this.state.accountState);\n    // accountState.ethBalanceBN = new BN(ethBalanceStr);\n    // accountState.selfBalanceBN = new BN(selfBalanceStr);\n\n    const selfBalanceStr = await selfTokenContract.methods.balanceOf(address).call();\n    const selfBalanceBN = new BigNumber(selfBalanceStr);\n    const accountState = {\n      selfBalanceBN,\n    }\n\n    // Update state with the result.\n    this.setState({ accountState });\n  };\n\n  setLangCode = (langCode) => {\n    strings.setLanguage(langCode);\n    this.setState({});\n  };\n\n  toggleBalances = () => {\n    this.setState({\n      isShowingBalances: !this.state.isShowingBalances,\n    });\n  };\n\n  setPage = (page) => {\n    this.setState({\n      showingPage: page,\n    });\n  };\n\n  render() {\n    const {\n      location,\n    } = this.props;\n\n    const {\n      contractAddress,\n      address,\n      isMerchantAddress,\n      addressInfo,\n      accountState,\n      isAllDataFetched,\n      // isShowingBalances,\n      showingPage,\n    } = this.state;\n    const { selfBalanceBN } = accountState;\n\n    let content = null;\n    if (!isAllDataFetched) {\n      content = <Spinner/>;\n    } else if (!isMerchantAddress) {\n      content = <div className=\"container\">\n        <div className=\"alert alert-danger\">\n        { strings.Invalid_Merchant_Address }\n        </div>\n      </div>;\n    } else {\n      if (showingPage === pages.receive_payment) {\n        const nowTimeStamp = Math.floor(Date.now() / 1000);\n        const fromTimeStamp = Math.floor(nowTimeStamp / 86400) * 86400;\n        console.log('fromTimeStamp', fromTimeStamp);\n        content = (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div className=\"mb-4\">\n                <DoubleBorderTitle paddingType=\"narrow\">{ strings.Store }</DoubleBorderTitle>\n                <div className=\"text-center\">\n                  <div onClick={ this.toggleBalances }>\n                    <AddressName address={ address } />\n                  </div>\n                  {/* {\n                    isShowingBalances && <>\n                      <div className=\"text-additional\">{ address }</div>\n                      <div className=\"text-additional\">{ formatWeiToEther(selfBalanceBN) } SELF</div>\n                    </>\n                  } */}\n                </div>\n              </div>\n\n              <div className=\"mb-3\">\n                <DoubleBorderTitle paddingType=\"narrow\">{ strings.Receive_SELF }</DoubleBorderTitle>\n                <MerchantReceiveToken\n                  address={ address }\n                  strings={ strings }\n                  location={ location }\n                  addressInfo={ addressInfo }\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-7\">\n              <DoubleBorderTitle paddingType=\"narrow\"><span title=\"當日交易為每日 8:00 到隔日 8:00 之間的交易\">{ strings.Today_s_Transactions }</span></DoubleBorderTitle>\n              <MerchantOrders\n                merchantAddress={ address }\n                strings={ strings }\n                fromTimeStamp={ fromTimeStamp }\n                isGroupedByMonth={ false }\n              />\n              <div className=\"text-additional\">如果一筆交易應該已經完成卻遲遲未出現，請至 <a href={ `https://etherscan.io/token/${contractAddress}?a=${address}` } target=\"_blank\" rel=\"noopener noreferrer\">Etherscan</a> 查看交易是否已完成。\n              </div>\n            </div>\n          </div>\n        </div>);\n      }\n      else if (showingPage === pages.dashboard) {\n        content = (\n        <div className=\"container\">\n          <div className=\"text-center mb-5\">\n            <AddressName address={ address } />\n            <div className=\"\">{ address }</div>\n            <div className=\"\">{ formatWeiToEther(selfBalanceBN) } SELF</div>\n          </div>\n\n          <DoubleBorderTitle paddingType=\"narrow\">{ strings.All_Transactions }</DoubleBorderTitle>\n          <MerchantOrders\n            merchantAddress={ address }\n            strings={ strings }\n            fromTimeStamp={ 0 }\n            isGroupedByMonth={ true }\n          />\n        </div>);\n      }\n    }\n\n    const navbar = <div className=\"custom-navbar mb-3 clearfix\">\n      <div className=\"float-left\">\n        <div>\n          <span className=\"app-title\">SELF DAPP - Merchant</span>\n          <span className=\"a custom-nav-link\" onClick={ () => { this.setPage(pages.receive_payment) } }>{ strings.Receive_Payment }</span>\n          <span className=\"a custom-nav-link\" onClick={ () => { this.setPage(pages.dashboard) } }>{ strings.Dashboard }</span>\n        </div>\n      </div>\n      <div className=\"float-right\">\n        <div className=\"d-inline-block\">\n          <a className=\"mr-3\" href=\"https://docs.google.com/document/d/1Tm8n4NjQ9QQQhPmVmlOZzNaa-pUySzBQO-nxbKG4sP8/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">{ strings.How_to_Use }</a>\n        </div>\n        <div className=\"d-inline-block\">\n          <LanguageSelector strings={strings} setLangCode={this.setLangCode} />\n        </div>\n      </div>\n    </div>;\n\n    const app = <div className=\"App\">\n      <div className=\"bg\">\n        <div className=\"line\"></div>\n      </div>\n      { navbar }\n      { content }\n    </div>;\n\n    return app;\n  }\n}\n\nexport default MerchantApp;\n","import { Component } from \"react\";\n\nclass NoMatchPage extends Component {\n  componentWillMount() {\n    window.location.replace(\"https://selfer.selftoken.co/\");\n  }\n\n  render() {\n    return null;\n    // return <div className=\"text-center\">\n    //   <h3 className=\"mt-5 mb-3\">Page Not Found</h3>\n    //   <div className=\"mb-1\">\n    //     Sorry, we can't find the page you're looking for.<br />\n    //     Please go back to the <a className=\"a\" href=\"https://selftoken.co/\">homepage</a> or try our new <a className=\"a\" href=\"https://selfer.selftoken.co/\">DApp</a>.\n    //   </div>\n    // </div>;\n  }\n}\n\nexport default NoMatchPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './custom.scss';\nimport MerchantApp from 'components/merchant/MerchantApp';\nimport NoMatchPage from 'components/NoMatchPage';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// overwrite console.log\nif (\n  window.location.hostname === 'test.selftoken.co' ||\n  window.location.hostname === 'testdapp.selftoken.co' ||\n  window.location.hostname.startsWith('192.168')\n) {\n  var logger = document.createElement('div');\n  logger.style.cssText = \"color: white;\";\n  document.body.appendChild(logger);\n\n  // show logs in html\n  console.log = (...messages) => {\n    for (const message of messages) {\n      if (typeof message == 'object') {\n        try {\n          logger.innerHTML += (JSON && JSON.stringify ? JSON.stringify(message) : message) + '<br />';\n        } catch (error) {\n          console.log(\"error when console.log object\");\n          console.error(error);\n        }\n      } else {\n          logger.innerHTML += message.toString() + '<br />';\n      }\n    }\n  }\n} else if (\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '127.0.0.1'\n) {\n\n} else {\n  // console.log will not work in production\n  console.log = () => {};\n}\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/merchant/:address\" component={MerchantApp}/>\n      {/* <Route exact path=\"/app\" component={App}/> */}\n      <Route component={NoMatchPage}/>\n      {/* <Route component={App}/> */}\n    </Switch>\n  </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__KCoow\",\"spinner-cover-container\":\"Spinner_spinner-cover-container__R_-Zx\",\"spinner-cover-background\":\"Spinner_spinner-cover-background__rgJx7\"};"],"sourceRoot":""}